spring:
  application:
    name: friend-service

  datasource:
    name: mydb
    url: jdbc:mysql://116.196.111.10:3306/friend?useUnicode=true&characterEncoding=UTF-8
    username: zhangqi
    password: 1994
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
eureka:
  client:
    service-url:
      defaultZone: http://zhangqi:1994@localhost:8761/eureka/  #注册到eureka
    instance:
      prefer-ip-address: true
#超时时间设置
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
security:
  basic:
    enabled: false
hystrix:
  metrics:
    enabled: true
    polling-interval-ms: 120000

mybatis:
  mapper-locations: classpath*:mapper/**/*.xml
  config-location: classpath:mybatis/mybatis-config.xml
  type-aliases-package: com.onion.pojo

server:
  port: 8030

endpoints:
  shutdown:
    enabled: true
    sensitive: false


